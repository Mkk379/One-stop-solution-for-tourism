// Generated by view binder compiler. Do not edit!
package com.project.onestop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.project.onestop.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddProductsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView contentCard;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText info;

  @NonNull
  public final LinearLayout inputContainer;

  @NonNull
  public final ImageView ivProduct;

  @NonNull
  public final Button sendRequest;

  @NonNull
  public final TextView textView5;

  private DialogAddProductsBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView contentCard, @NonNull EditText etName, @NonNull EditText info,
      @NonNull LinearLayout inputContainer, @NonNull ImageView ivProduct,
      @NonNull Button sendRequest, @NonNull TextView textView5) {
    this.rootView = rootView;
    this.contentCard = contentCard;
    this.etName = etName;
    this.info = info;
    this.inputContainer = inputContainer;
    this.ivProduct = ivProduct;
    this.sendRequest = sendRequest;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contentCard;
      CardView contentCard = ViewBindings.findChildViewById(rootView, id);
      if (contentCard == null) {
        break missingId;
      }

      id = R.id.etName;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.info;
      EditText info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.inputContainer;
      LinearLayout inputContainer = ViewBindings.findChildViewById(rootView, id);
      if (inputContainer == null) {
        break missingId;
      }

      id = R.id.ivProduct;
      ImageView ivProduct = ViewBindings.findChildViewById(rootView, id);
      if (ivProduct == null) {
        break missingId;
      }

      id = R.id.sendRequest;
      Button sendRequest = ViewBindings.findChildViewById(rootView, id);
      if (sendRequest == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new DialogAddProductsBinding((ConstraintLayout) rootView, contentCard, etName, info,
          inputContainer, ivProduct, sendRequest, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
